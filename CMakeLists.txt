PROJECT(SimSim)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
IF(COMMAND cmake_policy)
  CMAKE_POLICY(SET CMP0003 NEW)

  IF(${CMAKE_MAJOR_VERSION} EQUAL 3)
    CMAKE_POLICY(SET CMP0042 NEW)
  ENDIF(${CMAKE_MAJOR_VERSION} EQUAL 3)
ENDIF(COMMAND cmake_policy)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}/cmake)

SET(SIMSIM_VERSION 0.1)

SET(PERLIN_IMPLEMENTATION "CPP" CACHE STRING "version of perlin to use (CPP or ISPC)")
SET_PROPERTY(CACHE PERLIN_IMPLEMENTATION PROPERTY STRINGS CPP ISPC)

IF(${PERLIN_IMPLEMENTATION} STREQUAL CPP)
	ADD_SUBDIRECTORY(perlin_cpp)
ELSE(${PERLIN_IMPLEMENTATION} STREQUAL CPP)
  SET(BUILD_ISA "AVX2" CACHE STRING "target ISA: AVX or AVX2")
  SET_PROPERTY(CACHE BUILD_ISA PROPERTY STRINGS AVX AVX2)
	SET(ISPC_DIRECTORY "" CACHE FILEPATH "Location of ISPC install")
	IF(NOT ${ISPC_DIRECTORY} STREQUAL "")
		INCLUDE(cmake/ispc.cmake)
		ADD_SUBDIRECTORY(perlin_ispc)
	ENDIF(NOT ${ISPC_DIRECTORY} STREQUAL "")
ENDIF(${PERLIN_IMPLEMENTATION} STREQUAL CPP)

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the build type." FORCE)
  SET_PROPERTY(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS Debug Release RelWithDebInfo MinSizeRel)
ENDIF(NOT CMAKE_BUILD_TYPE)

MARK_AS_ADVANCED(CMAKE_INSTALL_PREFIX)

# compiler selection for the non-MIC part
IF (APPLE)
  SET(COMPILER "CLANG" CACHE STRING "compiler to use (ICC,GCC, or CLANG)")
  SET_PROPERTY(CACHE COMPILER PROPERTY STRINGS ICC GCC CLANG)
ELSE(APPLE)
  SET(COMPILER "GCC" CACHE STRING "compiler to use (ICC or GCC)")
  SET_PROPERTY(CACHE COMPILER PROPERTY STRINGS ICC GCC)
ENDIF(APPLE)

# OPTION(OSPRAY_BUILD_MPI_DEVICE "Enable MPI")
# SET(SIMSIM_MPI ${SIMSIM_BUILD_MPI_DEVICE})

# INCLUDE(cmake/mpi.cmake)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
ADD_EXECUTABLE(sim sim.cpp)
TARGET_LINK_LIBRARIES(sim LINK_PUBLIC perlin)

